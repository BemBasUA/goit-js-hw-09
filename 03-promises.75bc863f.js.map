{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,iBAClCE,OAAQH,SAASC,cAAc,mBAC/BG,KAAMJ,SAASC,cAAc,UAG/B,IAAII,EAAa,EAEbC,EAAY,EAEZC,EAAS,EA6Bb,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEH,SAAUA,EAAUC,MAAOA,IAErCG,EAAO,CAAEJ,SAAUA,EAAUC,MAAOA,MAErCA,MApCPZ,EAAKM,KAAKc,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACFf,EAAagB,OAAOvB,EAAKC,WAAWuB,OACpChB,EAAYe,OAAOvB,EAAKI,UAAUoB,OAClCf,EAAST,EAAKK,OAAOmB,MACrB,IAAIC,EAAQlB,EACZ,IAAK,IAAImB,EAAI,EAAGA,GAAKjB,EAAQiB,IAAK,CAE5BA,EAAI,IACND,GAASjB,GAEXE,EAJiBgB,EAIOD,GACrBE,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBnB,QAAiBC,UAGzCmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoBrB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelay: document.querySelector(`[name=\"delay\"]`),\n  delayStep: document.querySelector(`[name=\"step\"]`),\n  amount: document.querySelector(`[name=\"amount\"]`),\n  form: document.querySelector(`.form`),\n};\n\nlet firstDelay = 0;\n\nlet delayStep = 0;\n\nlet amount = 0;\n\nrefs.form.addEventListener(`submit`, onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  firstDelay = Number(refs.firstDelay.value);\n  delayStep = Number(refs.delayStep.value);\n  amount = refs.amount.value;\n  let delay = firstDelay;\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    if (i > 1) {\n      delay += delayStep;\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","firstDelay","document","querySelector","delayStep","amount","form","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.75bc863f.js.map"}